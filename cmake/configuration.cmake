# debug & release
set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "Possible configurations")
mark_as_advanced(CMAKE_CONFIGURATION_TYPES)

if(DEFINED CMAKE_BUILD_TYPE)
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS ${CMAKE_CONFIGURATION_TYPES})
endif(DEFINED CMAKE_BUILD_TYPE)

if("${CMAKE_BUILD_TYPE}" STREQUAL "")
  set(CMAKE_BUILD_TYPE Release)
endif("${CMAKE_BUILD_TYPE}" STREQUAL "")

# if(CAMKE_INSTALLPREFIX_INITIALIZED_TO_DEFAULT)
#   
# endif()
# message("CMAKE_BUILD_TYPE = " ${CMAKE_BUILD_TYPE})
# message("CMAKE_CONFIGURATION_TYPES = " ${CMAKE_CONFIGURATION_TYPES})
# message("CMAKE_INSTALL_PREFIX = " ${CMAKE_INSTALL_PREFIX})
# message("PROJECT_BINARY_DIR = " ${PROJECT_BINARY_DIR})

# cxx flags & cuda flags
list(APPEND CXX_COMPILE_FLAGS -Wall)
list(APPEND CXX_COMPILE_FLAGS -fPIC)
list(APPEND CXX_COMPILE_FLAGS -std=c++11)
#list(APPEND CXX_COMPILE_FLAGS /)

#list(APPEND CXX_COMPILE_FLAGS -Shared)

message("CMAKE_CXX_FLAGS_DEBUG = " ${CMAKE_CXX_FLAGS_DEBUG})
message("CMAKE_CXX_FLAGS_RELEASE = " ${CMAKE_CXX_FLAGS_RELEASE})
if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
  list(APPEND CXX_COMPILE_FLAGS ${CMAKE_CXX_FLAGS_DEBUG})
else()
  list(APPEND CXX_COMPILE_FLAGS ${CMAKE_CXX_FLAGS_RELEASE})
endif()

foreach(FLAG IN LISTS CXX_COMPILE_FLAGS)
  message(${FLAG})
endforeach(FLAG IN LISTS CXX_COMPILE_FLAGS)

add_definitions(${CXX_COMPILE_FLAGS})